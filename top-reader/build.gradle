plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.kapt" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id 'maven-publish'
}



version "1.0-SNAPSHOT"
group "ti.lsm.henrique"

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    compile 'io.micronaut.configuration:micronaut-kafka'
    compile "org.apache.logging.log4j:log4j-api-kotlin:1.0.0"
    compile group: 'com.github.oshi', name: 'oshi-core', version: '4.4.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    //Local dependencies
    compile 'ti.lsm.henrique:top-reader-model:1.0-SNAPSHOT'

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
    kaptTest "io.micronaut:micronaut-inject-java"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    testCompile 'org.apache.kafka:kafka-clients:2.4.0:test'
    testCompile 'org.apache.kafka:kafka_2.12:2.4.0'
    testCompile 'org.apache.kafka:kafka_2.12:2.4.0:test'
}

test.classpath += configurations.developmentOnly

mainClassName = "ti.lsm.henrique.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
